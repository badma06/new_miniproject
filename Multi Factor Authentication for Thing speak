from flask import Flask, request, session, redirect, render_template
import smtplib
import random

app = Flask(__name__)
app.secret_key = "your_secret_key"  # Use a strong secret key for session management

# Function to generate OTP
def generate_otp():
    return random.randint(100000, 999999)

# Function to send OTP via email
def send_email(recipient_email, subject, message):
    try:
        smtp_server = "smtp.gmail.com"  # SMTP server for Gmail
        smtp_port = 587  # TLS port
        sender_email = "industrialcoldchain@gmail.com"
        sender_password = "qvfa icvc kgfz cxos"  # Use App Password here

        # Create the SMTP session
        server = smtplib.SMTP(smtp_server, smtp_port)
        server.starttls()  # Start TLS encryption
        server.login(sender_email, sender_password)
        #email_message = f"Subject: {subject}\n\n{message}"
        email_message = f"Subject: {subject}\nTo: {recipient_email}\n\n{message}"
        server.sendmail(sender_email, recipient_email, email_message)
        server.quit()
        print(f"OTP sent to {recipient_email}")
    except Exception as e:
        print(f"Error sending email: {e}")

# Route: Home Page
@app.route('/')
def index():
    return render_template('index.html')

# Route: Generate and Send OTP
@app.route('/send_otp', methods=['POST'])
def send_otp():
    email = request.form['email']  # Get email input from form
    otp = generate_otp()
    session['otp'] = otp  # Store OTP in session for verification
    subject = "Your OTP Code"
    message = f"Your OTP is: {otp}. Welcome to Cold chain monitoring!! Please Donot share this OTP with anyone!! "

    # Send OTP email
    send_email(email, subject, message)
    return '''
        <title>Cold Chain Monitoring - Login</title>
        <h1>Cold Chain Monitoring</h1>
        <h3>OTP Sent Successfully!</h3>
        <form method="post" action="/verify_otp">
            Enter OTP: <input type="text" name="otp" required><br>
            <button type="submit">Verify OTP</button>
        </form>
    '''

# Route: Verify OTP and Redirect to ThingSpeak
@app.route('/verify_otp', methods=['POST'])
def verify_otp():
    user_otp = request.form['otp']
    if 'otp' in session and int(user_otp) == session['otp']:
        session.pop('otp')  # Clear OTP from session after successful verification

        # Redirect to ThingSpeak URL
        thingspeak_url = "https://thingspeak.com/channels/2880817"  # Replace with your ThingSpeak URL
        return redirect(thingspeak_url)
    return '''
        <title>Cold Chain Monitoring - Login</title>
        <h1>Cold Chain Monitoring</h1>
        <h3>Invalid OTP</h3>
        <p>Please try again.</p>
    '''

if __name__ == '__main__':
    app.run(debug=True)
